{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","character","image","name","origin","species","CardList","characters","map","id","App","state","page","url","this","fetch","then","response","json","setState","results","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAGaA,G,MAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAaC,IAAI,YAAYC,IAAKH,EAAMI,UAAUC,QACjE,6BAAML,EAAMI,UAAUE,OACtB,0CAAaN,EAAMI,UAAUG,OAAOD,QACpC,2CAAcN,EAAMI,UAAUI,gBCJzBC,G,MAAW,SAAAT,GACpB,OAAO,qBAAKC,UAAU,YAAf,SACHD,EAAMU,WAAWC,KAAI,SAAAP,GAAS,OAC9B,cAAC,EAAD,CAAyBA,UAAWA,GAAzBA,EAAUQ,WCqCdC,G,wDAvCb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXJ,WAAW,GACXK,KAAM,GAJG,E,gEAOO,IAAD,OACbC,EAAM,mDAAoDC,KAAKH,MAAMC,KACzEG,MAAMF,GACLG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAf,GAAc,EAAKkB,SAAS,CAACZ,WAAWN,EAAUmB,e,2CAGrC,IAAD,OACdP,EAAM,mDAAoDC,KAAKH,MAAMC,KACzEG,MAAMF,GACLG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAf,GAAc,EAAKkB,SAAS,CAACZ,WAAWN,EAAUmB,e,+BAGjD,IAAD,OACN,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,CAAUS,WAAYO,KAAKH,MAAMJ,aAEjC,wBAAQc,QAAS,WACS,IAApB,EAAKV,MAAMC,MACZ,EAAKO,SAAS,CAAEP,KAAM,EAAKD,MAAMC,KAAO,KAF7C,sBAKA,wBAAQS,QAAS,kBACf,EAAKF,SAAS,CAAEP,KAAM,EAAKD,MAAMC,KAAO,KAD1C,yB,GAhCUU,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.10fc4f8d.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nexport const Card = (props) => (\n    <div className=\"card-container\">\n        <img className=\"card-image\" alt=\"character\" src={props.character.image}/>\n        <h2 >{props.character.name}</h2>\n        <p>Origin : {props.character.origin.name}</p>\n        <p>Species : {props.character.species}</p>\n    </div>\n)\n","import React from 'react'\nimport {Card} from '../card/card.component'\nimport './card-list.styles.css'\n\nexport const CardList = props => {\n    return(<div className=\"card-list\">{\n        props.characters.map(character => (\n        <Card key={character.id} character={character}/>\n     ))}</div>);\n };","import React, {Component} from 'react'\nimport {CardList} from './components/card-list/card-list.component'\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      characters:[],\n      page: 1,\n    };\n  }\n  componentDidMount(){\n    let url = 'https://rickandmortyapi.com/api/character/?page='+ this.state.page;\n    fetch(url)\n    .then(response => response.json())\n    .then(character => {this.setState({characters:character.results})})\n  }\n\n  componentDidUpdate(){\n    let url = 'https://rickandmortyapi.com/api/character/?page='+ this.state.page;\n    fetch(url)\n    .then(response => response.json())\n    .then(character => {this.setState({characters:character.results})})\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n        <CardList characters={this.state.characters}/>\n\n        <button onClick={() =>\n          {if(this.state.page !== 1)\n            {this.setState({ page: this.state.page - 1 })}}\n        }>Previous</button>\n        \n        <button onClick={() =>\n          this.setState({ page: this.state.page + 1 })\n        }>Next</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}