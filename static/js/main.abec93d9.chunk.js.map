{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","logo.png","components/empty-alert/empty-alert.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","alert","character","status","Badge","variant","className","alt","src","image","name","CardList","initial","characters","map","li","variants","hidden","opacity","visible","i","transition","delay","animate","custom","id","SearchBox","placeholder","handleChange","type","onChange","EmptyAlert","Alert","Heading","App","e","setState","searchField","target","value","Greeting","filteredCharacters","state","page","url","this","fetch","then","response","json","results","filter","toLowerCase","includes","length","logo","Button","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abec93d9.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\nimport Badge from 'react-bootstrap/badge'\n\nexport const Card = (props) => {\n    let alert;\n    if (props.character.status === \"Alive\") {\n      alert = <Badge  variant=\"success\">Alive</Badge>;\n    }else if(props.character.status === \"Dead\"){\n        alert = <Badge  variant=\"danger\">Dead</Badge>;\n    }else{\n        alert = <Badge  variant=\"secondary\">Unknown</Badge>;\n    }\n\n    return(\n    <div className=\"card-container\">\n        <img className=\"card-image\" alt=\"character\" src={props.character.image}/>\n        <p className=\"name\">{props.character.name}</p>\n        <p className=\"badge\">{alert}</p>\n        {/* <p>Origin : {props.character.origin.name}</p>\n        <p>Species : {props.character.species}</p> */}\n    </div>\n);}\n\n","import React from 'react'\nimport {Card} from '../card/card.component'\nimport './card-list.styles.css'\nimport {motion, AnimatePresence} from 'framer-motion'\n\nexport const CardList = props => {\n    return(\n    <AnimatePresence initial={true}>\n    <div \n    className=\"card-list\"> {\n        props.characters.map(character => (\n        <motion.li\n        variants ={{\n            hidden: {\n                opacity :0,\n            },\n            visible: (i) => ({\n                opacity:1,\n                transition :{\n                    delay: 0.125*i,\n                }\n            })\n        }}\n        animate= \"visible\"\n        initial= \"hidden\"\n        custom={character.id}\n        className=\"card-li\" key={character.id}>\n            <Card character={character}/>\n        </motion.li>\n     ))}\n     </div>\n     </AnimatePresence>\n     );\n };","import React from 'react'\nimport './search-box.styles.css'\n\nexport const SearchBox = ({placeholder,handleChange}) => (\n    <input \n    className='search'\n    type='search' \n    placeholder={placeholder}\n    onChange={handleChange}\n    />\n);\n\n","export default __webpack_public_path__ + \"static/media/logo.23a3f17c.png\";","import React from 'react'\nimport Alert  from 'react-bootstrap/Alert';\n\nexport const EmptyAlert = props => {\n    return(\n        <Alert variant=\"danger\">\n        <Alert.Heading>Oh snap! No such characters exist!</Alert.Heading>\n        <p>\n          To be clear, since there are infinite universes in the central time curve, they do exist.\n          They just haven't been introduced to us yet.\n        </p>\n      </Alert>\n    );\n };","import React, {Component} from 'react'\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\nimport logo from '../src/logo.png'\nimport Button  from 'react-bootstrap/Button';\nimport {EmptyAlert} from './components/empty-alert/empty-alert.component';\nimport FA from 'react-fontawesome'\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      characters:[],\n      page: 1,\n      searchField : ''\n    };\n  }\n\n  componentDidMount(){\n    let url = 'https://rickandmortyapi.com/api/character/?page='+ this.state.page;\n    fetch(url)\n    .then(response => response.json())\n    .then(character => {this.setState({characters:character.results})})\n  }\n\n  componentDidUpdate(){\n    let url = 'https://rickandmortyapi.com/api/character/?page='+ this.state.page;\n    fetch(url)\n    .then(response => response.json())\n    .then(character => {this.setState({characters:character.results})})\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField:e.target.value})\n  }\n\n  Greeting = (props) => {\n    if (props.filteredCharacters === \"\") {\n      return <EmptyAlert />;\n    }\n  }\n\n  render(){\n    const { characters, searchField } = this.state;\n    const filteredCharacters = characters.filter(character => \n      character.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    let alert;\n    if (!filteredCharacters.length) {\n      alert = <EmptyAlert className=\"alert\"/>;\n    } \n\n    return(\n      <div className=\"App\">\n      <div  className=\"logo-container\">\n      <img className=\"logo-image\" alt=\"logo\" src={logo}></img>\n      </div>\n\n      <Button className=\"button\" onClick={() =>\n          {if(this.state.page !== 1)\n            {this.setState({ page: this.state.page - 1 })}}\n      }><FA name=\"chevron-circle-left\"></FA></Button>\n        \n      <SearchBox \n        placeholder=\"Search Characters\" \n        handleChange= {this.handleChange}\n      />\n\n      <Button className=\"button\" onClick={() =>\n          this.setState({ page: this.state.page + 1 })\n      }><FA name=\"chevron-circle-right\"></FA></Button>\n\n      <div>{alert}</div>\n\n      <CardList characters={filteredCharacters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}